// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.7.0
//   protoc               v3.20.3
// source: sbai_protos/behavior_control_command.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";

export const protobufPackage = "sbai_protos";

export enum BehaviorControl {
  BEHAVIOR_CONTROL_UNSPECIFIED = 0,
  BEHAVIOR_CONTROL_PAUSE = 1,
  BEHAVIOR_CONTROL_RESUME = 2,
  BEHAVIOR_CONTROL_CANCEL = 3,
  BEHAVIOR_CONTROL_RESTART = 4,
  UNRECOGNIZED = -1,
}

export function behaviorControlFromJSON(object: any): BehaviorControl {
  switch (object) {
    case 0:
    case "BEHAVIOR_CONTROL_UNSPECIFIED":
      return BehaviorControl.BEHAVIOR_CONTROL_UNSPECIFIED;
    case 1:
    case "BEHAVIOR_CONTROL_PAUSE":
      return BehaviorControl.BEHAVIOR_CONTROL_PAUSE;
    case 2:
    case "BEHAVIOR_CONTROL_RESUME":
      return BehaviorControl.BEHAVIOR_CONTROL_RESUME;
    case 3:
    case "BEHAVIOR_CONTROL_CANCEL":
      return BehaviorControl.BEHAVIOR_CONTROL_CANCEL;
    case 4:
    case "BEHAVIOR_CONTROL_RESTART":
      return BehaviorControl.BEHAVIOR_CONTROL_RESTART;
    case -1:
    case "UNRECOGNIZED":
    default:
      return BehaviorControl.UNRECOGNIZED;
  }
}

export function behaviorControlToJSON(object: BehaviorControl): string {
  switch (object) {
    case BehaviorControl.BEHAVIOR_CONTROL_UNSPECIFIED:
      return "BEHAVIOR_CONTROL_UNSPECIFIED";
    case BehaviorControl.BEHAVIOR_CONTROL_PAUSE:
      return "BEHAVIOR_CONTROL_PAUSE";
    case BehaviorControl.BEHAVIOR_CONTROL_RESUME:
      return "BEHAVIOR_CONTROL_RESUME";
    case BehaviorControl.BEHAVIOR_CONTROL_CANCEL:
      return "BEHAVIOR_CONTROL_CANCEL";
    case BehaviorControl.BEHAVIOR_CONTROL_RESTART:
      return "BEHAVIOR_CONTROL_RESTART";
    case BehaviorControl.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

export interface BehaviorControlCommand {
  command: BehaviorControl;
  behaviorRequestId: string;
}

function createBaseBehaviorControlCommand(): BehaviorControlCommand {
  return { command: 0, behaviorRequestId: "" };
}

export const BehaviorControlCommand: MessageFns<BehaviorControlCommand> = {
  encode(message: BehaviorControlCommand, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.command !== 0) {
      writer.uint32(8).int32(message.command);
    }
    if (message.behaviorRequestId !== "") {
      writer.uint32(18).string(message.behaviorRequestId);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): BehaviorControlCommand {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseBehaviorControlCommand();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1: {
          if (tag !== 8) {
            break;
          }

          message.command = reader.int32() as any;
          continue;
        }
        case 2: {
          if (tag !== 18) {
            break;
          }

          message.behaviorRequestId = reader.string();
          continue;
        }
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): BehaviorControlCommand {
    return {
      command: isSet(object.command) ? behaviorControlFromJSON(object.command) : 0,
      behaviorRequestId: isSet(object.behaviorRequestId) ? globalThis.String(object.behaviorRequestId) : "",
    };
  },

  toJSON(message: BehaviorControlCommand): unknown {
    const obj: any = {};
    if (message.command !== 0) {
      obj.command = behaviorControlToJSON(message.command);
    }
    if (message.behaviorRequestId !== "") {
      obj.behaviorRequestId = message.behaviorRequestId;
    }
    return obj;
  },

  create<I extends Exact<DeepPartial<BehaviorControlCommand>, I>>(base?: I): BehaviorControlCommand {
    return BehaviorControlCommand.fromPartial(base ?? ({} as any));
  },
  fromPartial<I extends Exact<DeepPartial<BehaviorControlCommand>, I>>(object: I): BehaviorControlCommand {
    const message = createBaseBehaviorControlCommand();
    message.command = object.command ?? 0;
    message.behaviorRequestId = object.behaviorRequestId ?? "";
    return message;
  },
};

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

type KeysOfUnion<T> = T extends T ? keyof T : never;
export type Exact<P, I extends P> = P extends Builtin ? P
  : P & { [K in keyof P]: Exact<P[K], I[K]> } & { [K in Exclude<keyof I, KeysOfUnion<P>>]: never };

function isSet(value: any): boolean {
  return value !== null && value !== undefined;
}

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create<I extends Exact<DeepPartial<T>, I>>(base?: I): T;
  fromPartial<I extends Exact<DeepPartial<T>, I>>(object: I): T;
}
