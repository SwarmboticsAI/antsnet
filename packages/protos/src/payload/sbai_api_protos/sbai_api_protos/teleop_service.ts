// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.7.0
//   protoc               v3.20.3
// source: payload/sbai_api_protos/sbai_api_protos/teleop_service.proto

/* eslint-disable */
import {
  type CallOptions,
  ChannelCredentials,
  Client,
  type ClientOptions,
  type ClientWritableStream,
  type handleClientStreamingCall,
  makeGenericClientConstructor,
  Metadata,
  type ServiceError,
  type UntypedServiceImplementation,
} from "@grpc/grpc-js";
import { Empty } from "../../../google/protobuf/empty";
import { Joy } from "../../../sbai_sensor_protos/joy";

export const protobufPackage = "sbai_api_protos";

export type TeleopServiceService = typeof TeleopServiceService;
export const TeleopServiceService = {
  teleop: {
    path: "/sbai_api_protos.TeleopService/Teleop",
    requestStream: true,
    responseStream: false,
    requestSerialize: (value: Joy) => Buffer.from(Joy.encode(value).finish()),
    requestDeserialize: (value: Buffer) => Joy.decode(value),
    responseSerialize: (value: Empty) => Buffer.from(Empty.encode(value).finish()),
    responseDeserialize: (value: Buffer) => Empty.decode(value),
  },
} as const;

export interface TeleopServiceServer extends UntypedServiceImplementation {
  teleop: handleClientStreamingCall<Joy, Empty>;
}

export interface TeleopServiceClient extends Client {
  teleop(callback: (error: ServiceError | null, response: Empty) => void): ClientWritableStream<Joy>;
  teleop(
    metadata: Metadata,
    callback: (error: ServiceError | null, response: Empty) => void,
  ): ClientWritableStream<Joy>;
  teleop(
    options: Partial<CallOptions>,
    callback: (error: ServiceError | null, response: Empty) => void,
  ): ClientWritableStream<Joy>;
  teleop(
    metadata: Metadata,
    options: Partial<CallOptions>,
    callback: (error: ServiceError | null, response: Empty) => void,
  ): ClientWritableStream<Joy>;
}

export const TeleopServiceClient = makeGenericClientConstructor(
  TeleopServiceService,
  "sbai_api_protos.TeleopService",
) as unknown as {
  new (address: string, credentials: ChannelCredentials, options?: Partial<ClientOptions>): TeleopServiceClient;
  service: typeof TeleopServiceService;
  serviceName: string;
};
