// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.7.0
//   protoc               v3.20.3
// source: ros2_interfaces/sbai_protos/sbai_protos/terrain_map_status.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";

export const protobufPackage = "sbai_protos";

export enum TerrainMapHealthStatus {
  TERRAIN_MAP_HEALTH_STATUS_UNSPECIFIED = 0,
  TERRAIN_MAP_HEALTH_STATUS_HEALTHY = 1,
  TERRAIN_MAP_HEALTH_STATUS_DEGRADED = 2,
  TERRAIN_MAP_HEALTH_STATUS_BLIND = 3,
  TERRAIN_MAP_HEALTH_STATUS_ERROR = 4,
  UNRECOGNIZED = -1,
}

export function terrainMapHealthStatusFromJSON(object: any): TerrainMapHealthStatus {
  switch (object) {
    case 0:
    case "TERRAIN_MAP_HEALTH_STATUS_UNSPECIFIED":
      return TerrainMapHealthStatus.TERRAIN_MAP_HEALTH_STATUS_UNSPECIFIED;
    case 1:
    case "TERRAIN_MAP_HEALTH_STATUS_HEALTHY":
      return TerrainMapHealthStatus.TERRAIN_MAP_HEALTH_STATUS_HEALTHY;
    case 2:
    case "TERRAIN_MAP_HEALTH_STATUS_DEGRADED":
      return TerrainMapHealthStatus.TERRAIN_MAP_HEALTH_STATUS_DEGRADED;
    case 3:
    case "TERRAIN_MAP_HEALTH_STATUS_BLIND":
      return TerrainMapHealthStatus.TERRAIN_MAP_HEALTH_STATUS_BLIND;
    case 4:
    case "TERRAIN_MAP_HEALTH_STATUS_ERROR":
      return TerrainMapHealthStatus.TERRAIN_MAP_HEALTH_STATUS_ERROR;
    case -1:
    case "UNRECOGNIZED":
    default:
      return TerrainMapHealthStatus.UNRECOGNIZED;
  }
}

export function terrainMapHealthStatusToJSON(object: TerrainMapHealthStatus): string {
  switch (object) {
    case TerrainMapHealthStatus.TERRAIN_MAP_HEALTH_STATUS_UNSPECIFIED:
      return "TERRAIN_MAP_HEALTH_STATUS_UNSPECIFIED";
    case TerrainMapHealthStatus.TERRAIN_MAP_HEALTH_STATUS_HEALTHY:
      return "TERRAIN_MAP_HEALTH_STATUS_HEALTHY";
    case TerrainMapHealthStatus.TERRAIN_MAP_HEALTH_STATUS_DEGRADED:
      return "TERRAIN_MAP_HEALTH_STATUS_DEGRADED";
    case TerrainMapHealthStatus.TERRAIN_MAP_HEALTH_STATUS_BLIND:
      return "TERRAIN_MAP_HEALTH_STATUS_BLIND";
    case TerrainMapHealthStatus.TERRAIN_MAP_HEALTH_STATUS_ERROR:
      return "TERRAIN_MAP_HEALTH_STATUS_ERROR";
    case TerrainMapHealthStatus.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

export interface TerrainMapStatus {
  healthStatus: TerrainMapHealthStatus;
}

function createBaseTerrainMapStatus(): TerrainMapStatus {
  return { healthStatus: 0 };
}

export const TerrainMapStatus: MessageFns<TerrainMapStatus> = {
  encode(message: TerrainMapStatus, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.healthStatus !== 0) {
      writer.uint32(8).int32(message.healthStatus);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): TerrainMapStatus {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseTerrainMapStatus();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1: {
          if (tag !== 8) {
            break;
          }

          message.healthStatus = reader.int32() as any;
          continue;
        }
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): TerrainMapStatus {
    return { healthStatus: isSet(object.healthStatus) ? terrainMapHealthStatusFromJSON(object.healthStatus) : 0 };
  },

  toJSON(message: TerrainMapStatus): unknown {
    const obj: any = {};
    if (message.healthStatus !== 0) {
      obj.healthStatus = terrainMapHealthStatusToJSON(message.healthStatus);
    }
    return obj;
  },

  create<I extends Exact<DeepPartial<TerrainMapStatus>, I>>(base?: I): TerrainMapStatus {
    return TerrainMapStatus.fromPartial(base ?? ({} as any));
  },
  fromPartial<I extends Exact<DeepPartial<TerrainMapStatus>, I>>(object: I): TerrainMapStatus {
    const message = createBaseTerrainMapStatus();
    message.healthStatus = object.healthStatus ?? 0;
    return message;
  },
};

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

type KeysOfUnion<T> = T extends T ? keyof T : never;
export type Exact<P, I extends P> = P extends Builtin ? P
  : P & { [K in keyof P]: Exact<P[K], I[K]> } & { [K in Exclude<keyof I, KeysOfUnion<P>>]: never };

function isSet(value: any): boolean {
  return value !== null && value !== undefined;
}

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create<I extends Exact<DeepPartial<T>, I>>(base?: I): T;
  fromPartial<I extends Exact<DeepPartial<T>, I>>(object: I): T;
}
