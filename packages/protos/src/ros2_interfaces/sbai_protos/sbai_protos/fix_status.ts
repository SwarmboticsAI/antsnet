// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.7.0
//   protoc               v3.20.3
// source: ros2_interfaces/sbai_protos/sbai_protos/fix_status.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";

export const protobufPackage = "sbai_protos";

export enum FixState {
  FIX_STATE_UNSPECIFIED = 0,
  FIX_STATE_NONE = 1,
  FIX_STATE_INVALID = 2,
  FIX_STATE_DEGRADED = 3,
  FIX_STATE_GOOD = 4,
  UNRECOGNIZED = -1,
}

export function fixStateFromJSON(object: any): FixState {
  switch (object) {
    case 0:
    case "FIX_STATE_UNSPECIFIED":
      return FixState.FIX_STATE_UNSPECIFIED;
    case 1:
    case "FIX_STATE_NONE":
      return FixState.FIX_STATE_NONE;
    case 2:
    case "FIX_STATE_INVALID":
      return FixState.FIX_STATE_INVALID;
    case 3:
    case "FIX_STATE_DEGRADED":
      return FixState.FIX_STATE_DEGRADED;
    case 4:
    case "FIX_STATE_GOOD":
      return FixState.FIX_STATE_GOOD;
    case -1:
    case "UNRECOGNIZED":
    default:
      return FixState.UNRECOGNIZED;
  }
}

export function fixStateToJSON(object: FixState): string {
  switch (object) {
    case FixState.FIX_STATE_UNSPECIFIED:
      return "FIX_STATE_UNSPECIFIED";
    case FixState.FIX_STATE_NONE:
      return "FIX_STATE_NONE";
    case FixState.FIX_STATE_INVALID:
      return "FIX_STATE_INVALID";
    case FixState.FIX_STATE_DEGRADED:
      return "FIX_STATE_DEGRADED";
    case FixState.FIX_STATE_GOOD:
      return "FIX_STATE_GOOD";
    case FixState.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

export interface FixStatus {
  fixState: FixState;
  numSatellites: number;
  horizontalAccuracyM: number;
  verticalAccuracyM: number;
}

function createBaseFixStatus(): FixStatus {
  return { fixState: 0, numSatellites: 0, horizontalAccuracyM: 0, verticalAccuracyM: 0 };
}

export const FixStatus: MessageFns<FixStatus> = {
  encode(message: FixStatus, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.fixState !== 0) {
      writer.uint32(8).int32(message.fixState);
    }
    if (message.numSatellites !== 0) {
      writer.uint32(16).uint32(message.numSatellites);
    }
    if (message.horizontalAccuracyM !== 0) {
      writer.uint32(25).double(message.horizontalAccuracyM);
    }
    if (message.verticalAccuracyM !== 0) {
      writer.uint32(33).double(message.verticalAccuracyM);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): FixStatus {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseFixStatus();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1: {
          if (tag !== 8) {
            break;
          }

          message.fixState = reader.int32() as any;
          continue;
        }
        case 2: {
          if (tag !== 16) {
            break;
          }

          message.numSatellites = reader.uint32();
          continue;
        }
        case 3: {
          if (tag !== 25) {
            break;
          }

          message.horizontalAccuracyM = reader.double();
          continue;
        }
        case 4: {
          if (tag !== 33) {
            break;
          }

          message.verticalAccuracyM = reader.double();
          continue;
        }
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): FixStatus {
    return {
      fixState: isSet(object.fixState) ? fixStateFromJSON(object.fixState) : 0,
      numSatellites: isSet(object.numSatellites) ? globalThis.Number(object.numSatellites) : 0,
      horizontalAccuracyM: isSet(object.horizontalAccuracyM) ? globalThis.Number(object.horizontalAccuracyM) : 0,
      verticalAccuracyM: isSet(object.verticalAccuracyM) ? globalThis.Number(object.verticalAccuracyM) : 0,
    };
  },

  toJSON(message: FixStatus): unknown {
    const obj: any = {};
    if (message.fixState !== 0) {
      obj.fixState = fixStateToJSON(message.fixState);
    }
    if (message.numSatellites !== 0) {
      obj.numSatellites = Math.round(message.numSatellites);
    }
    if (message.horizontalAccuracyM !== 0) {
      obj.horizontalAccuracyM = message.horizontalAccuracyM;
    }
    if (message.verticalAccuracyM !== 0) {
      obj.verticalAccuracyM = message.verticalAccuracyM;
    }
    return obj;
  },

  create<I extends Exact<DeepPartial<FixStatus>, I>>(base?: I): FixStatus {
    return FixStatus.fromPartial(base ?? ({} as any));
  },
  fromPartial<I extends Exact<DeepPartial<FixStatus>, I>>(object: I): FixStatus {
    const message = createBaseFixStatus();
    message.fixState = object.fixState ?? 0;
    message.numSatellites = object.numSatellites ?? 0;
    message.horizontalAccuracyM = object.horizontalAccuracyM ?? 0;
    message.verticalAccuracyM = object.verticalAccuracyM ?? 0;
    return message;
  },
};

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

type KeysOfUnion<T> = T extends T ? keyof T : never;
export type Exact<P, I extends P> = P extends Builtin ? P
  : P & { [K in keyof P]: Exact<P[K], I[K]> } & { [K in Exclude<keyof I, KeysOfUnion<P>>]: never };

function isSet(value: any): boolean {
  return value !== null && value !== undefined;
}

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create<I extends Exact<DeepPartial<T>, I>>(base?: I): T;
  fromPartial<I extends Exact<DeepPartial<T>, I>>(object: I): T;
}
