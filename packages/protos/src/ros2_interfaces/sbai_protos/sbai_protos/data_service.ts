// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.7.0
//   protoc               v3.20.3
// source: ros2_interfaces/sbai_protos/sbai_protos/data_service.proto

/* eslint-disable */
import {
  type CallOptions,
  ChannelCredentials,
  Client,
  type ClientOptions,
  type ClientUnaryCall,
  type handleUnaryCall,
  makeGenericClientConstructor,
  Metadata,
  type ServiceError,
  type UntypedServiceImplementation,
} from "@grpc/grpc-js";
import { Empty } from "../../../google/protobuf/empty";
import { AggregatedTable } from "../../../sbai_protos/aggregated_table";

export const protobufPackage = "sbai_protos";

export type DataServiceService = typeof DataServiceService;
export const DataServiceService = {
  requestNetworkTable: {
    path: "/sbai_protos.DataService/RequestNetworkTable",
    requestStream: false,
    responseStream: false,
    requestSerialize: (value: Empty) => Buffer.from(Empty.encode(value).finish()),
    requestDeserialize: (value: Buffer) => Empty.decode(value),
    responseSerialize: (value: AggregatedTable) => Buffer.from(AggregatedTable.encode(value).finish()),
    responseDeserialize: (value: Buffer) => AggregatedTable.decode(value),
  },
  requestSystemTable: {
    path: "/sbai_protos.DataService/RequestSystemTable",
    requestStream: false,
    responseStream: false,
    requestSerialize: (value: Empty) => Buffer.from(Empty.encode(value).finish()),
    requestDeserialize: (value: Buffer) => Empty.decode(value),
    responseSerialize: (value: AggregatedTable) => Buffer.from(AggregatedTable.encode(value).finish()),
    responseDeserialize: (value: Buffer) => AggregatedTable.decode(value),
  },
  requestTaskTable: {
    path: "/sbai_protos.DataService/RequestTaskTable",
    requestStream: false,
    responseStream: false,
    requestSerialize: (value: Empty) => Buffer.from(Empty.encode(value).finish()),
    requestDeserialize: (value: Buffer) => Empty.decode(value),
    responseSerialize: (value: AggregatedTable) => Buffer.from(AggregatedTable.encode(value).finish()),
    responseDeserialize: (value: Buffer) => AggregatedTable.decode(value),
  },
} as const;

export interface DataServiceServer extends UntypedServiceImplementation {
  requestNetworkTable: handleUnaryCall<Empty, AggregatedTable>;
  requestSystemTable: handleUnaryCall<Empty, AggregatedTable>;
  requestTaskTable: handleUnaryCall<Empty, AggregatedTable>;
}

export interface DataServiceClient extends Client {
  requestNetworkTable(
    request: Empty,
    callback: (error: ServiceError | null, response: AggregatedTable) => void,
  ): ClientUnaryCall;
  requestNetworkTable(
    request: Empty,
    metadata: Metadata,
    callback: (error: ServiceError | null, response: AggregatedTable) => void,
  ): ClientUnaryCall;
  requestNetworkTable(
    request: Empty,
    metadata: Metadata,
    options: Partial<CallOptions>,
    callback: (error: ServiceError | null, response: AggregatedTable) => void,
  ): ClientUnaryCall;
  requestSystemTable(
    request: Empty,
    callback: (error: ServiceError | null, response: AggregatedTable) => void,
  ): ClientUnaryCall;
  requestSystemTable(
    request: Empty,
    metadata: Metadata,
    callback: (error: ServiceError | null, response: AggregatedTable) => void,
  ): ClientUnaryCall;
  requestSystemTable(
    request: Empty,
    metadata: Metadata,
    options: Partial<CallOptions>,
    callback: (error: ServiceError | null, response: AggregatedTable) => void,
  ): ClientUnaryCall;
  requestTaskTable(
    request: Empty,
    callback: (error: ServiceError | null, response: AggregatedTable) => void,
  ): ClientUnaryCall;
  requestTaskTable(
    request: Empty,
    metadata: Metadata,
    callback: (error: ServiceError | null, response: AggregatedTable) => void,
  ): ClientUnaryCall;
  requestTaskTable(
    request: Empty,
    metadata: Metadata,
    options: Partial<CallOptions>,
    callback: (error: ServiceError | null, response: AggregatedTable) => void,
  ): ClientUnaryCall;
}

export const DataServiceClient = makeGenericClientConstructor(
  DataServiceService,
  "sbai_protos.DataService",
) as unknown as {
  new (address: string, credentials: ChannelCredentials, options?: Partial<ClientOptions>): DataServiceClient;
  service: typeof DataServiceService;
  serviceName: string;
};
