// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.7.0
//   protoc               v3.20.3
// source: ros2_interfaces/sbai_protos/sbai_protos/direct_control_service.proto

/* eslint-disable */
import {
  type CallOptions,
  ChannelCredentials,
  Client,
  type ClientOptions,
  type ClientUnaryCall,
  type ClientWritableStream,
  type handleClientStreamingCall,
  type handleUnaryCall,
  makeGenericClientConstructor,
  Metadata,
  type ServiceError,
  type UntypedServiceImplementation,
} from "@grpc/grpc-js";
import { Empty } from "../../../google/protobuf/empty";
import { DirectControlCommand } from "../../../sbai_protos/direct_control_command";
import { DirectControlStartRequest, DirectControlStopRequest } from "../../../sbai_protos/direct_control_request";
import { DirectControlResponse } from "../../../sbai_protos/direct_control_response";

export const protobufPackage = "sbai_protos";

export type DirectControlServiceService = typeof DirectControlServiceService;
export const DirectControlServiceService = {
  startDirectControlSession: {
    path: "/sbai_protos.DirectControlService/StartDirectControlSession",
    requestStream: false,
    responseStream: false,
    requestSerialize: (value: DirectControlStartRequest) =>
      Buffer.from(DirectControlStartRequest.encode(value).finish()),
    requestDeserialize: (value: Buffer) => DirectControlStartRequest.decode(value),
    responseSerialize: (value: DirectControlResponse) => Buffer.from(DirectControlResponse.encode(value).finish()),
    responseDeserialize: (value: Buffer) => DirectControlResponse.decode(value),
  },
  stopDirectControlSession: {
    path: "/sbai_protos.DirectControlService/StopDirectControlSession",
    requestStream: false,
    responseStream: false,
    requestSerialize: (value: DirectControlStopRequest) => Buffer.from(DirectControlStopRequest.encode(value).finish()),
    requestDeserialize: (value: Buffer) => DirectControlStopRequest.decode(value),
    responseSerialize: (value: DirectControlResponse) => Buffer.from(DirectControlResponse.encode(value).finish()),
    responseDeserialize: (value: Buffer) => DirectControlResponse.decode(value),
  },
  commandDirectControl: {
    path: "/sbai_protos.DirectControlService/CommandDirectControl",
    requestStream: true,
    responseStream: false,
    requestSerialize: (value: DirectControlCommand) => Buffer.from(DirectControlCommand.encode(value).finish()),
    requestDeserialize: (value: Buffer) => DirectControlCommand.decode(value),
    responseSerialize: (value: Empty) => Buffer.from(Empty.encode(value).finish()),
    responseDeserialize: (value: Buffer) => Empty.decode(value),
  },
} as const;

export interface DirectControlServiceServer extends UntypedServiceImplementation {
  startDirectControlSession: handleUnaryCall<DirectControlStartRequest, DirectControlResponse>;
  stopDirectControlSession: handleUnaryCall<DirectControlStopRequest, DirectControlResponse>;
  commandDirectControl: handleClientStreamingCall<DirectControlCommand, Empty>;
}

export interface DirectControlServiceClient extends Client {
  startDirectControlSession(
    request: DirectControlStartRequest,
    callback: (error: ServiceError | null, response: DirectControlResponse) => void,
  ): ClientUnaryCall;
  startDirectControlSession(
    request: DirectControlStartRequest,
    metadata: Metadata,
    callback: (error: ServiceError | null, response: DirectControlResponse) => void,
  ): ClientUnaryCall;
  startDirectControlSession(
    request: DirectControlStartRequest,
    metadata: Metadata,
    options: Partial<CallOptions>,
    callback: (error: ServiceError | null, response: DirectControlResponse) => void,
  ): ClientUnaryCall;
  stopDirectControlSession(
    request: DirectControlStopRequest,
    callback: (error: ServiceError | null, response: DirectControlResponse) => void,
  ): ClientUnaryCall;
  stopDirectControlSession(
    request: DirectControlStopRequest,
    metadata: Metadata,
    callback: (error: ServiceError | null, response: DirectControlResponse) => void,
  ): ClientUnaryCall;
  stopDirectControlSession(
    request: DirectControlStopRequest,
    metadata: Metadata,
    options: Partial<CallOptions>,
    callback: (error: ServiceError | null, response: DirectControlResponse) => void,
  ): ClientUnaryCall;
  commandDirectControl(
    callback: (error: ServiceError | null, response: Empty) => void,
  ): ClientWritableStream<DirectControlCommand>;
  commandDirectControl(
    metadata: Metadata,
    callback: (error: ServiceError | null, response: Empty) => void,
  ): ClientWritableStream<DirectControlCommand>;
  commandDirectControl(
    options: Partial<CallOptions>,
    callback: (error: ServiceError | null, response: Empty) => void,
  ): ClientWritableStream<DirectControlCommand>;
  commandDirectControl(
    metadata: Metadata,
    options: Partial<CallOptions>,
    callback: (error: ServiceError | null, response: Empty) => void,
  ): ClientWritableStream<DirectControlCommand>;
}

export const DirectControlServiceClient = makeGenericClientConstructor(
  DirectControlServiceService,
  "sbai_protos.DirectControlService",
) as unknown as {
  new (address: string, credentials: ChannelCredentials, options?: Partial<ClientOptions>): DirectControlServiceClient;
  service: typeof DirectControlServiceService;
  serviceName: string;
};
